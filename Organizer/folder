using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using wcerms.Models;

namespace wcerms.Data
{
    public class AppDbContext : DbContext
    {
        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options) { }

        public DbSet<User> Users { get; set; }
        public DbSet<Event> Events { get; set; }
        public DbSet<Venue> Venues { get; set; }
        public DbSet<Resource> Resources { get; set; }
        public DbSet<Booking> Bookings { get; set; }
        public DbSet<AuditLog> AuditLog { get; set; }
    }

    public class User
    {
        public int UserId { get; set; }
        public string Name { get; set; } = "";
        public string Email { get; set; } = "";
        public string Password { get; set; } = "";
        public string Role { get; set; } = "";
    }

    public class Event
    {
        public int EventId { get; set; }
        public string Title { get; set; } = "";
        public string? Description { get; set; }
        public DateTime start_datetime { get; set; }
        public DateTime end_datetime { get; set; }
        public User organizer_id { get; set; }
    }

    public class Venue
    {
        public int VenueId { get; set; }
        public string Name { get; set; } = "";
        public int Capacity { get; set; }
        public string Location { get; set; } = "";
        public string? Details { get; set; }
    }

    public class Resource
    {
        public int ResourceId { get; set; }
        public string ResourceType { get; set; } = "";
        public string ResourceName { get; set; } = "";
        public int Quantity { get; set; }
    }

    public class Booking
    {
        public int BookingId { get; set; }
        public int EventId { get; set; }
        public int VenueId { get; set; }
        public DateTime Date { get; set; }
        public string Status { get; set; } = "Pending";
    }

    public class AuditLog
    {
        [Key]
        public int AuditLogId { get; set; }

        [Required]
        [MaxLength(100)]
        public string TableName { get; set; } = string.Empty;

        [Required]
        [MaxLength(20)]
        public string ActionType { get; set; } = string.Empty; // INSERT, UPDATE, DELETE

        [MaxLength(1000)]
        public string? KeyValues { get; set; }

        public string? OldValues { get; set; }

        public string? NewValues { get; set; }

        public int? PerformedBy { get; set; }

        public DateTime PerformedAt { get; set; } = DateTime.UtcNow;
    }
}
